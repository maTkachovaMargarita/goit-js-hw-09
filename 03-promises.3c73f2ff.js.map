{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,qBAAqBL,QAAeC,MAAU,IAEvEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,oBAAoBP,QAAeC,MAAU,G,CAnC9DO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBACF,MAAMX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,OAElC,IAAIC,EAAaC,OAAOhB,EAAMiB,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAiBH,OAAOH,EAAOI,OAErC,IAAK,IAAIlB,EAAW,EAAGA,GAAYoB,EAAgBpB,GAAY,EAC7DV,EAAcU,EAAUgB,GACxBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.target;\n\n  let firstDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountPromises = Number(amount.value);\n\n  for (let position = 1; position <= amountPromises; position += 1) {\n    createPromise(position, firstDelay);\n    firstDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","e","preventDefault","step","amount","target","firstDelay","Number","value","stepDelay","amountPromises"],"version":3,"file":"03-promises.3c73f2ff.js.map"}